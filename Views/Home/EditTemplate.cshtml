@model MailDemon.MailTemplateModel
@{
    string errorClass = (Model.Error ? "error-message" : "message");
}

<h2>@MailDemon.Resources.EditTemplate</h2>

@using (Html.BeginForm())
{
    <div class="@errorClass">@Model.Message</div><br />
    @Html.LabelFor(m => m.Value.Name) @Html.EditorFor(m => m.Value.Name)<br />
    @Html.LabelFor(m => m.Value.Title) @Html.EditorFor(m => m.Value.Title)<br />
    @Html.LabelFor(m => m.Value.Text) @Html.TextAreaFor(m => m.Value.Text)<br />
    @Html.HiddenFor(m => m.Value.Id)
    <br />
    <button class="submit-button" name="action" value="save">@MailDemon.Resources.Save</button>
    if (Model.Value.Id != 0)
    {
        <button class="submit-button" type="submit" formmethod="post" formaction="/@nameof(MailDemon.HomeController.DebugTemplate)/@Model.Value.Name" formtarget="_blank" style="margin-left: 20px;">@MailDemon.Resources.Test</button>
    }
    if (Model.Value.Id != 0)
    {
        <button class="submit-button" name="action" value="send" style="margin-left: 20px;" onclick="return confirm('! Confirm Send !');">@MailDemon.Resources.Send</button>
        <button class="delete-button" name="action" value="delete" onclick="return confirm('! Confirm Deletion !');">@MailDemon.Resources.Delete</button>
        <br /><br />
    }
}

<script type="text/javascript">
    var mixedMode =
    {
        name: "htmlmixed",
        scriptTypes: [{ matches: /\/x-handlebars-template|\/x-mustache/i, mode: null },
        { matches: /(text|application)\/(x-)?vb(a|script)/i, mode: "vbscript" }]
    };
    CodeMirror.fromTextArea(document.getElementById('@Html.IdFor(m => m.Value.Text)'), { theme: 'blackboard', lineNumbers: true, styleActiveLine: true, mode: mixedMode });
</script>