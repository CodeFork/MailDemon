<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AlreadySubscribed" xml:space="preserve">
    <value>You are already subscribed to the '{0}' mailing list.</value>
  </data>
  <data name="BodyConfirmSubscription" xml:space="preserve">
    <value>&lt;p&gt;Please confirm your subscription to the '{0}' mailing list by clicking this link:&lt;/p&gt;
&lt;p&gt;&lt;a href="{1}" target="_blank"&gt;{1}&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you do not click the link, you will not receive emails from the '{0}' mailing list.&lt;/p&gt;</value>
  </data>
  <data name="BodyWelcomeSubscription" xml:space="preserve">
    <value>&lt;p&gt;Welcome to your subscription to the '{0}' mailing list.&lt;/p&gt;
&lt;p&gt;To unsubscribe from this mailing list, please use the following link:&lt;/p&gt;
&lt;p&gt;&lt;a href="{1}" target="_blank"&gt;{1}&lt;/a&gt;&lt;/p&gt;</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditList" xml:space="preserve">
    <value>Edit List</value>
  </data>
  <data name="EditTemplate" xml:space="preserve">
    <value>Edit Template</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="EmailIsInvalid" xml:space="preserve">
    <value>Email is invalid.</value>
  </data>
  <data name="FooterText" xml:space="preserve">
    <value>Powered by &lt;a target='_blank' href='https://github.com/DigitalRuby/MailDemon'&gt;MailDemon&lt;/a&gt;, (c) 2018 &lt;a target='_blank' href='https://www.digitalruby.com'&gt;Digital Ruby, LLC&lt;/a&gt;</value>
  </data>
  <data name="LastModified" xml:space="preserve">
    <value>Last Modified</value>
  </data>
  <data name="ListHasNoSubscribers" xml:space="preserve">
    <value>List has no subscribers</value>
  </data>
  <data name="ListName" xml:space="preserve">
    <value>List Name</value>
  </data>
  <data name="ListNotFound" xml:space="preserve">
    <value>List '{0}' not found</value>
  </data>
  <data name="Lists" xml:space="preserve">
    <value>Lists</value>
  </data>
  <data name="LoggedInAs" xml:space="preserve">
    <value>Logged in as {0}</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginFailed" xml:space="preserve">
    <value>Login failed</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameCannotChange" xml:space="preserve">
    <value>Name may not change</value>
  </data>
  <data name="NameInvalidChars" xml:space="preserve">
    <value>Invalid name, use only letters, numbers, spaces, period, hyphen or underscore.</value>
  </data>
  <data name="NameIsTooLong" xml:space="preserve">
    <value>Name is too long, limit is {0} characters</value>
  </data>
  <data name="NewList" xml:space="preserve">
    <value>New List</value>
  </data>
  <data name="NewTemplate" xml:space="preserve">
    <value>New Template</value>
  </data>
  <data name="PleaseContactSupport" xml:space="preserve">
    <value>Please contact support</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SubjectConfirmSubscription" xml:space="preserve">
    <value>Please confirm your subscription to the '{0}' mailing list</value>
  </data>
  <data name="SubjectWelcomeSubscription" xml:space="preserve">
    <value>Welcome to your subscription to the '{0}' mailing list.</value>
  </data>
  <data name="SubscribeConfirm" xml:space="preserve">
    <value>Please check your email for a confirmation link, you should open this link to confirm your subscription to the '{0}' mailing list.</value>
  </data>
  <data name="SubscribedDate" xml:space="preserve">
    <value>Subscribed Date</value>
  </data>
  <data name="SubscribeError" xml:space="preserve">
    <value>There was an error subscribing to the '{0}' mailing list, please contact support.</value>
  </data>
  <data name="SubscribeText" xml:space="preserve">
    <value>Subscribe to the '{0}' mailing list</value>
  </data>
  <data name="SubscribeWelcome" xml:space="preserve">
    <value>Welcome to the '{0}' mailing list. Your subscription is now active. To unsubscribe from this mailing list, please use the following link: </value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="TemplateNameInvalidChars" xml:space="preserve">
    <value>Invalid template name, use only letters, numbers, spaces, period, hyphen or underscore. Format is [listname]{0}[templatename].</value>
  </data>
  <data name="Templates" xml:space="preserve">
    <value>Templates</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="UnknownError" xml:space="preserve">
    <value>An unknown error has happened, please contact support.</value>
  </data>
  <data name="UnsubscribedDate" xml:space="preserve">
    <value>Unsubscribed Date</value>
  </data>
  <data name="UnsubscribeError" xml:space="preserve">
    <value>There was an error unsubscribing from the '{0}' mailing list, please contact support.</value>
  </data>
  <data name="UnsubscribeSuccess" xml:space="preserve">
    <value>You are now unsubscribed from the '{0}' mailing list.</value>
  </data>
  <data name="UnsubscribeText" xml:space="preserve">
    <value>Unsubscribe from the '{0}' mailing list</value>
  </data>
  <data name="UsernameOrPasswordIsBlank" xml:space="preserve">
    <value>Username or password is blank</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ListSubscribers" xml:space="preserve">
    <value>Subscribers for '{0}' mailing list</value>
  </data>
  <data name="Send" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="SendStarted" xml:space="preserve">
    <value>Send Started</value>
  </data>
  <data name="MissingSubjectInTemplate" xml:space="preserve">
    <value>Missing subject in template</value>
  </data>
</root>